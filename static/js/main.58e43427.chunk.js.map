{"version":3,"sources":["components/Rules.js","components/Header.js","components/Casella.js","components/Tavolozza.js","components/Board.js","components/Schema.js","components/Punteggi.js","App.js","index.js"],"names":["Rules","Header","className","coloriDisponibili","carteDisponibili","Casella","indexCasella","number","color","cambiaNumero","cambiaColore","selected","cambiaSelected","positionName","style","backgroundColor","borderColor","borderStyle","borderWidth","onClick","bind","arrayOfMiniNumeri","i","length","numero","push","this","createMiniNumeri","arrayOfMiniColori","colore","createMiniColori","Tavolozza","cambiaColoreSelected","map","element","index","Board","setnumberStats","setcolorStats","useState","griglia","counter","letters","letter","toString","creaGrid","grid","setGrid","tempArray","result","reduce","accumulator","current","currentNumber","console","log","currentColor","Schema","numberStats","colorStats","Punteggi","App","type","value","window","location","reload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58e43427.chunk.js","sourcesContent":["const Rules = () => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <li>Bottino Reale Bronzo se il punteggio è compreso tra 10 e 399</li>\r\n        <li>Bottino Reale Argento se il punteggio è compreso tra 400 e 549</li>\r\n        <li>Bottino Reale Oro se il punteggio è superiore a 550</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Rules;\r\n","import Rules from \"./Rules\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"containerHeader unselectable\">\r\n      <h1>TROVA IL RE</h1>\r\n      <Rules />\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","const coloriDisponibili = [\"white\", \"green\", \"orange\", \"yellow\", \"purple\", \"blue\", \"red\"];\r\nconst carteDisponibili = [\"\", \"1\", \"2\", \"3\", \"4\", \"5\", \"K\"];\r\n\r\nconst Casella = ({\r\n  indexCasella,\r\n  number,\r\n  color,\r\n  cambiaNumero,\r\n  cambiaColore,\r\n  selected,\r\n  cambiaSelected,\r\n  positionName,\r\n}) => {\r\n  function createMiniNumeri() {\r\n    var arrayOfMiniNumeri = [];\r\n    for (var i = 0; i < carteDisponibili.length; i++) {\r\n      var numero = carteDisponibili[i];\r\n\r\n      arrayOfMiniNumeri.push(\r\n        <div className=\"miniNumero\" key={i} onClick={cambiaNumero.bind(this, indexCasella, numero)}>\r\n          <span>{numero}</span>\r\n        </div>\r\n      );\r\n    }\r\n    return arrayOfMiniNumeri;\r\n  }\r\n\r\n  function createMiniColori() {\r\n    var arrayOfMiniColori = [];\r\n    for (var i = 0; i < coloriDisponibili.length; i++) {\r\n      var colore = coloriDisponibili[i];\r\n\r\n      arrayOfMiniColori.push(\r\n        <div\r\n          className=\"miniColore\"\r\n          key={i}\r\n          onClick={cambiaColore.bind(this, indexCasella, colore)}\r\n          style={{ backgroundColor: colore }}\r\n        />\r\n      );\r\n    }\r\n    return arrayOfMiniColori;\r\n  }\r\n  return (\r\n    <div className=\"containerCasellaMain unselectable\">\r\n      <div className=\"containerCasellaColoreNumero\">\r\n        <div className=\"containerCasellaNumero\">\r\n          <div\r\n            style={{\r\n              backgroundColor: color,\r\n              borderColor: \"black\",\r\n              borderStyle: \"solid\",\r\n              borderWidth: selected === true ? \"3px\" : \"1px\",\r\n            }}\r\n            className=\"unselectable casella\"\r\n            onClick={cambiaSelected.bind(this, indexCasella)}\r\n          >\r\n            <span>{number === \"0\" ? null : number}</span>\r\n            <span className=\"positionCasella\">{positionName}</span>\r\n          </div>\r\n          <div className=\"containerMiniNumeri\">{createMiniNumeri()}</div>\r\n\r\n          {/*<div className=\"containerSelected\" style={{ backgroundColor: selected === true ? \"green\" : null }} />*/}\r\n        </div>\r\n        <div className=\"containerMiniColori\"> {createMiniColori()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Casella;\r\n","const coloriDisponibili = [\"white\", \"green\", \"orange\", \"yellow\", \"purple\", \"blue\", \"red\"];\r\n\r\nconst Tavolozza = ({ cambiaColoreSelected }) => {\r\n  return (\r\n    <div className=\"containerTavolozza\">\r\n      <div className=\"tavolozza\">\r\n        {coloriDisponibili.map((element, index) => {\r\n          return (\r\n            <div\r\n              className=\"coloreTavolozza\"\r\n              key={index}\r\n              style={{ backgroundColor: element }}\r\n              onClick={cambiaColoreSelected.bind(this, element)}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Tavolozza;\r\n","import Casella from \"./Casella\";\r\nimport Tavolozza from \"./Tavolozza\";\r\nimport { useState } from \"react\";\r\n\r\nconst creaGrid = function () {\r\n  var griglia = [];\r\n  var counter = 0;\r\n  var letters = [\"A\", \"B\", \"C\", \"D\", \"E\"];\r\n  var letter = 0;\r\n  for (var i = 0; i < 25; i++) {\r\n    counter++;\r\n    griglia.push({\r\n      number: \"0\",\r\n      color: \"white\",\r\n      selected: false,\r\n      positionName: `${letters[letter]}${counter.toString()}`,\r\n    });\r\n    if (counter == 5) {\r\n      counter = 0;\r\n      letter++;\r\n    }\r\n  }\r\n  return griglia;\r\n};\r\n\r\nconst Board = ({ setnumberStats, setcolorStats }) => {\r\n  const [grid, setGrid] = useState(creaGrid());\r\n\r\n  const cambiaNumero = function (indexCasella, numero) {\r\n    var tempArray = grid;\r\n\r\n    tempArray[indexCasella][\"number\"] = numero;\r\n\r\n    setGrid([...tempArray]);\r\n\r\n    const result = grid.reduce((accumulator, current) => {\r\n      const currentNumber = current.number;\r\n      if (accumulator[currentNumber]) {\r\n        accumulator[currentNumber]++;\r\n      } else {\r\n        accumulator[currentNumber] = 1;\r\n      }\r\n      return accumulator;\r\n    }, {});\r\n    console.log(result);\r\n    setnumberStats(result);\r\n  };\r\n\r\n  const cambiaColore = function (indexCasella, colore) {\r\n    var tempArray = grid;\r\n\r\n    tempArray[indexCasella][\"color\"] = colore;\r\n\r\n    setGrid([...tempArray]);\r\n\r\n    const result = grid.reduce((accumulator, current) => {\r\n      const currentColor = current.color;\r\n      if (accumulator[currentColor]) {\r\n        accumulator[currentColor]++;\r\n      } else {\r\n        accumulator[currentColor] = 1;\r\n      }\r\n      return accumulator;\r\n    }, {});\r\n    setcolorStats(result);\r\n  };\r\n\r\n  const cambiaSelected = function (indexCasella) {\r\n    var tempArray = grid;\r\n\r\n    tempArray[indexCasella][\"selected\"] = !tempArray[indexCasella][\"selected\"];\r\n\r\n    setGrid([...tempArray]);\r\n  };\r\n\r\n  const cambiaColoreSelected = function (colore) {\r\n    var tempArray = grid;\r\n\r\n    for (var indexCasella = 0; indexCasella < tempArray.length; indexCasella++) {\r\n      if (tempArray[indexCasella][\"selected\"]) {\r\n        tempArray[indexCasella][\"color\"] = colore;\r\n        tempArray[indexCasella][\"selected\"] = !tempArray[indexCasella][\"selected\"];\r\n      }\r\n    }\r\n\r\n    setGrid([...tempArray]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"board\">\r\n        {grid.map((element, index) => {\r\n          return (\r\n            <Casella\r\n              key={index}\r\n              number={element.number}\r\n              color={element.color}\r\n              selected={element.selected}\r\n              positionName={element.positionName}\r\n              indexCasella={index}\r\n              cambiaNumero={cambiaNumero}\r\n              cambiaColore={cambiaColore}\r\n              cambiaSelected={cambiaSelected}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <Tavolozza cambiaColoreSelected={cambiaColoreSelected} />\r\n    </div>\r\n  );\r\n};\r\nexport default Board;\r\n","const Schema = ({ numberStats, colorStats }) => {\r\n  return (\r\n    <div className=\"schemaContainer unselectable\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>CARTA</th>\r\n            <th>QUANTITA</th>\r\n            <th>SEGNATE</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>1</td>\r\n            <td>7</td>\r\n            <td>{numberStats[\"1\"]}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>2</td>\r\n            <td>4</td>\r\n            <td>{numberStats[\"2\"]}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>3</td>\r\n            <td>5</td>\r\n            <td>{numberStats[\"3\"]}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>4</td>\r\n            <td>5</td>\r\n            <td>{numberStats[\"4\"]}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>5</td>\r\n            <td>3</td>\r\n            <td>{numberStats[\"5\"]}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>K</td>\r\n            <td>1</td>\r\n            <td>{numberStats[\"K\"]}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nexport default Schema;\r\n","const Punteggi = () => {\r\n  return (\r\n    <div className=\"containerPunteggi unselectable\">\r\n      <h3>PUNTEGGI</h3>\r\n      <ul>\r\n        <li>La carta scoperta è 1: +10 punti</li>\r\n        <li>La carta scoperta è 2: +20 punti</li>\r\n        <li>La carta scoperta è 3: +30 punti</li>\r\n        <li>La carta scoperta è 4: +40 punti</li>\r\n        <li>La carta scoperta è 5: +50 punti</li>\r\n        <li>La carta scoperta è K: +100 punti</li>\r\n        <li>Se si scoprono tutte le carte di una fila: +10 punti</li>\r\n        <li>Se si scoprono tutte le carte di una colonna: +10 punti</li>\r\n        <li>Se si scoprono tutte le carte di una diagonale grande: +10 punti</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Punteggi;\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Board from \"./components/Board\";\nimport Schema from \"./components/Schema\";\nimport Punteggi from \"./components/Punteggi\";\n\nfunction App() {\n  const [numberStats, setnumberStats] = useState({});\n  const [colorStats, setcolorStats] = useState({});\n\n  return (\n    <div>\n      <div className=\"boardAndSchema\">\n        <Board setnumberStats={setnumberStats} setcolorStats={setcolorStats} />\n        <div className=\"rightMenu\">\n          <Header />\n          <Schema numberStats={numberStats} colorStats={colorStats} />\n          <Punteggi />\n          <input type=\"button\" className=\"button\" value=\"Reset\" onClick={() => window.location.reload(false)} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}